// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sigortam.Cerit.Data;

#nullable disable

namespace Sigortam.Cerit.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230519221626_FixedRelationship1")]
    partial class FixedRelationship1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sigortam.Cerit.Data.Entity.Insurance", b =>
                {
                    b.Property<int>("InsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsuranceId"));

                    b.Property<double>("IdentificationNumber")
                        .HasColumnType("float");

                    b.Property<int?>("InsuranceCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsuranceEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsuranceStartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("InsuranceId");

                    b.HasIndex("InsuranceCompanyId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Insurance");
                });

            modelBuilder.Entity("Sigortam.Cerit.Data.Entity.InsuranceCompany", b =>
                {
                    b.Property<int>("InsuranceCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsuranceCompanyId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Photo")
                        .HasColumnType("int");

                    b.HasKey("InsuranceCompanyId");

                    b.ToTable("InsuranceCompany");
                });

            modelBuilder.Entity("Sigortam.Cerit.Data.Entity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("BirthYear")
                        .HasColumnType("int");

                    b.Property<double>("IdentificationNumber")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PhoneNumber")
                        .HasColumnType("float");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Sigortam.Cerit.Data.Entity.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleYear")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("Sigortam.Cerit.Data.Entity.Insurance", b =>
                {
                    b.HasOne("Sigortam.Cerit.Data.Entity.InsuranceCompany", "InsuranceCompany")
                        .WithMany("Insurances")
                        .HasForeignKey("InsuranceCompanyId");

                    b.HasOne("Sigortam.Cerit.Data.Entity.User", "User")
                        .WithMany("Insurances")
                        .HasForeignKey("UserId");

                    b.HasOne("Sigortam.Cerit.Data.Entity.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId");

                    b.Navigation("InsuranceCompany");

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Sigortam.Cerit.Data.Entity.InsuranceCompany", b =>
                {
                    b.Navigation("Insurances");
                });

            modelBuilder.Entity("Sigortam.Cerit.Data.Entity.User", b =>
                {
                    b.Navigation("Insurances");
                });
#pragma warning restore 612, 618
        }
    }
}
